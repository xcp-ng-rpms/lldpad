From 14c3470dc17f19038659553753dc22be35874dc1 Mon Sep 17 00:00:00 2001
From: Ross Lagerwall <ross.lagerwall@citrix.com>
Date: Tue, 10 Jan 2023 17:49:55 +0000
Subject: [PATCH 5/5] lldp: Reject frames with duplicate TLVs

This avoids leaking memory when the pointer to the first TLV (of a
particular type) is later overwritten by a duplicate TLV.

Signed-off-by: Ross Lagerwall <ross.lagerwall@citrix.com>
Signed-off-by: Aaron Conole <aconole@redhat.com>
---
 lldp/rx.c | 70 +++++++++++++++++++++++++++++++++++++++++++------------
 1 file changed, 55 insertions(+), 15 deletions(-)

diff --git a/lldp/rx.c b/lldp/rx.c
index f0c8002..467ee2a 100644
--- a/lldp/rx.c
+++ b/lldp/rx.c
@@ -342,29 +342,69 @@ void rxProcessFrame(struct port *port, struct lldp_agent *agent)
 			}
 		}
 		if (tlv->type == TYPE_4) { /* port description */
-			agent->lldpdu |= RCVD_LLDP_TLV_TYPE4;
-			agent->rx.manifest->portdesc = tlv;
-			tlv_stored = true;
+			if (agent->lldpdu & RCVD_LLDP_TLV_TYPE4) {
+				LLDPAD_INFO("Received multiple port description"
+					" TLVs in this LLDPDU\n");
+				frame_error++;
+				free_unpkd_tlv(tlv);
+				goto out;
+			} else {
+				agent->lldpdu |= RCVD_LLDP_TLV_TYPE4;
+				agent->rx.manifest->portdesc = tlv;
+				tlv_stored = true;
+			}
 		}
 		if (tlv->type == TYPE_5) { /* system name */
-			agent->lldpdu |= RCVD_LLDP_TLV_TYPE5;
-			agent->rx.manifest->sysname = tlv;
-			tlv_stored = true;
+			if (agent->lldpdu & RCVD_LLDP_TLV_TYPE5) {
+				LLDPAD_INFO("Received multiple system name"
+					" TLVs in this LLDPDU\n");
+				frame_error++;
+				free_unpkd_tlv(tlv);
+				goto out;
+			} else {
+				agent->lldpdu |= RCVD_LLDP_TLV_TYPE5;
+				agent->rx.manifest->sysname = tlv;
+				tlv_stored = true;
+			}
 		}
 		if (tlv->type == TYPE_6) { /* system description */
-			agent->lldpdu |= RCVD_LLDP_TLV_TYPE6;
-			agent->rx.manifest->sysdesc = tlv;
-			tlv_stored = true;
+			if (agent->lldpdu & RCVD_LLDP_TLV_TYPE6) {
+				LLDPAD_INFO("Received multiple system description"
+					" TLVs in this LLDPDU\n");
+				frame_error++;
+				free_unpkd_tlv(tlv);
+				goto out;
+			} else {
+                            agent->lldpdu |= RCVD_LLDP_TLV_TYPE6;
+                            agent->rx.manifest->sysdesc = tlv;
+                            tlv_stored = true;
+                        }
 		}
 		if (tlv->type == TYPE_7) { /* system capabilities */
-			agent->lldpdu |= RCVD_LLDP_TLV_TYPE7;
-			agent->rx.manifest->syscap = tlv;
-			tlv_stored = true;
+			if (agent->lldpdu & RCVD_LLDP_TLV_TYPE7) {
+				LLDPAD_INFO("Received multiple system capabilities"
+					" TLVs in this LLDPDU\n");
+				frame_error++;
+				free_unpkd_tlv(tlv);
+				goto out;
+			} else {
+				agent->lldpdu |= RCVD_LLDP_TLV_TYPE7;
+				agent->rx.manifest->syscap = tlv;
+				tlv_stored = true;
+			}
 		}
 		if (tlv->type == TYPE_8) { /* mgmt address */
-			agent->lldpdu |= RCVD_LLDP_TLV_TYPE8;
-			agent->rx.manifest->mgmtadd = tlv;
-			tlv_stored = true;
+			if (agent->lldpdu & RCVD_LLDP_TLV_TYPE8) {
+				LLDPAD_INFO("Received multiple mgmt address"
+					" TLVs in this LLDPDU\n");
+				frame_error++;
+				free_unpkd_tlv(tlv);
+				goto out;
+			} else {
+				agent->lldpdu |= RCVD_LLDP_TLV_TYPE8;
+				agent->rx.manifest->mgmtadd = tlv;
+				tlv_stored = true;
+			}
 		}
 
 		/* rx per lldp module */
-- 
2.31.1

